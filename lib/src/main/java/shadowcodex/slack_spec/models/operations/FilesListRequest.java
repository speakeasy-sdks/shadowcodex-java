/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package shadowcodex.slack_spec.models.operations;

import shadowcodex.slack_spec.utils.SpeakeasyMetadata;

public class FilesListRequest {
    /**
     * Filter files appearing in a specific channel, indicated by its ID.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=channel")
    public String channel;
    public FilesListRequest withChannel(String channel) {
        this.channel = channel;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=count")
    public String count;
    public FilesListRequest withCount(String count) {
        this.count = count;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page")
    public String page;
    public FilesListRequest withPage(String page) {
        this.page = page;
        return this;
    }
    
    /**
     * Show truncated file info for files hidden due to being too old, and the team who owns the file being over the file limit.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=show_files_hidden_by_limit")
    public Boolean showFilesHiddenByLimit;
    public FilesListRequest withShowFilesHiddenByLimit(Boolean showFilesHiddenByLimit) {
        this.showFilesHiddenByLimit = showFilesHiddenByLimit;
        return this;
    }
    
    /**
     * Authentication token. Requires scope: `files:read`
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=token")
    public String token;
    public FilesListRequest withToken(String token) {
        this.token = token;
        return this;
    }
    
    /**
     * Filter files created after this timestamp (inclusive).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ts_from")
    public Double tsFrom;
    public FilesListRequest withTsFrom(Double tsFrom) {
        this.tsFrom = tsFrom;
        return this;
    }
    
    /**
     * Filter files created before this timestamp (inclusive).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ts_to")
    public Double tsTo;
    public FilesListRequest withTsTo(Double tsTo) {
        this.tsTo = tsTo;
        return this;
    }
    
    /**
     * Filter files by type ([see below](#file_types)). You can pass multiple values in the types argument, like `types=spaces,snippets`.The default value is `all`, which does not filter the list.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=types")
    public String types;
    public FilesListRequest withTypes(String types) {
        this.types = types;
        return this;
    }
    
    /**
     * Filter files created by a single user.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=user")
    public String user;
    public FilesListRequest withUser(String user) {
        this.user = user;
        return this;
    }
    
    public FilesListRequest(){}
}
