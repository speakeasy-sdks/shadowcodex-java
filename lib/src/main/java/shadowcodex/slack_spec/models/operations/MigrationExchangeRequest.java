/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package shadowcodex.slack_spec.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import shadowcodex.slack_spec.utils.SpeakeasyMetadata;

public class MigrationExchangeRequest {
    /**
     * Specify team_id starts with `T` in case of Org Token
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=team_id")
    public String teamId;

    public MigrationExchangeRequest withTeamId(String teamId) {
        this.teamId = teamId;
        return this;
    }
    
    /**
     * Specify `true` to convert `W` global user IDs to workspace-specific `U` IDs. Defaults to `false`.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=to_old")
    public Boolean toOld;

    public MigrationExchangeRequest withToOld(Boolean toOld) {
        this.toOld = toOld;
        return this;
    }
    
    /**
     * Authentication token. Requires scope: `tokens.basic`
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=token")
    public String token;

    public MigrationExchangeRequest withToken(String token) {
        this.token = token;
        return this;
    }
    
    /**
     * A comma-separated list of user ids, up to 400 per request
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=users")
    public String users;

    public MigrationExchangeRequest withUsers(String users) {
        this.users = users;
        return this;
    }
    
    public MigrationExchangeRequest(@JsonProperty("token") String token, @JsonProperty("users") String users) {
        this.token = token;
        this.users = users;
  }
}
