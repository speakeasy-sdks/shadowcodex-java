/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package shadowcodex.slack_spec.models.operations;

import shadowcodex.slack_spec.utils.SpeakeasyMetadata;

public class FilesRemoteShareRequest {
    /**
     * Comma-separated list of channel IDs where the file will be shared.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=channels")
    public String channels;
    public FilesRemoteShareRequest withChannels(String channels) {
        this.channels = channels;
        return this;
    }
    
    /**
     * The globally unique identifier (GUID) for the file, as set by the app registering the file with Slack.  Either this field or `file` or both are required.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=external_id")
    public String externalId;
    public FilesRemoteShareRequest withExternalId(String externalId) {
        this.externalId = externalId;
        return this;
    }
    
    /**
     * Specify a file registered with Slack by providing its ID. Either this field or `external_id` or both are required.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=file")
    public String file;
    public FilesRemoteShareRequest withFile(String file) {
        this.file = file;
        return this;
    }
    
    /**
     * Authentication token. Requires scope: `remote_files:share`
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=token")
    public String token;
    public FilesRemoteShareRequest withToken(String token) {
        this.token = token;
        return this;
    }
    
    public FilesRemoteShareRequest(){}
}
