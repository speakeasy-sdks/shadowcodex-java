/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package shadowcodex.slack_spec.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ChatUnfurlApplicationJSON {
    /**
     * Channel ID of the message
     */
    @JsonProperty("channel")
    public String channel;

    public ChatUnfurlApplicationJSON withChannel(String channel) {
        this.channel = channel;
        return this;
    }
    
    /**
     * Timestamp of the message to add unfurl behavior to.
     */
    @JsonProperty("ts")
    public String ts;

    public ChatUnfurlApplicationJSON withTs(String ts) {
        this.ts = ts;
        return this;
    }
    
    /**
     * URL-encoded JSON map with keys set to URLs featured in the the message, pointing to their unfurl blocks or message attachments.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unfurls")
    public String unfurls;

    public ChatUnfurlApplicationJSON withUnfurls(String unfurls) {
        this.unfurls = unfurls;
        return this;
    }
    
    /**
     * Provide a simply-formatted string to send as an ephemeral message to the user as invitation to authenticate further and enable full unfurling behavior
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_auth_message")
    public String userAuthMessage;

    public ChatUnfurlApplicationJSON withUserAuthMessage(String userAuthMessage) {
        this.userAuthMessage = userAuthMessage;
        return this;
    }
    
    /**
     * Set to `true` or `1` to indicate the user must install your Slack app to trigger unfurls for this domain
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_auth_required")
    public Boolean userAuthRequired;

    public ChatUnfurlApplicationJSON withUserAuthRequired(Boolean userAuthRequired) {
        this.userAuthRequired = userAuthRequired;
        return this;
    }
    
    /**
     * Send users to this custom URL where they will complete authentication in your app to fully trigger unfurling. Value should be properly URL-encoded.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_auth_url")
    public String userAuthUrl;

    public ChatUnfurlApplicationJSON withUserAuthUrl(String userAuthUrl) {
        this.userAuthUrl = userAuthUrl;
        return this;
    }
    
    public ChatUnfurlApplicationJSON(@JsonProperty("channel") String channel, @JsonProperty("ts") String ts) {
        this.channel = channel;
        this.ts = ts;
  }
}
