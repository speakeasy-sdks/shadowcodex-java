/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package shadowcodex.slack_spec.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import shadowcodex.slack_spec.utils.SpeakeasyMetadata;

public class AdminTeamsAdminsListRequest {
    /**
     * Set `cursor` to `next_cursor` returned by the previous call to list items in the next page.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=cursor")
    public String cursor;
    public AdminTeamsAdminsListRequest withCursor(String cursor) {
        this.cursor = cursor;
        return this;
    }
    
    /**
     * The maximum number of items to return.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Long limit;
    public AdminTeamsAdminsListRequest withLimit(Long limit) {
        this.limit = limit;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=team_id")
    public String teamId;
    public AdminTeamsAdminsListRequest withTeamId(String teamId) {
        this.teamId = teamId;
        return this;
    }
    
    /**
     * Authentication token. Requires scope: `admin.teams:read`
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=token")
    public String token;
    public AdminTeamsAdminsListRequest withToken(String token) {
        this.token = token;
        return this;
    }
    
    public AdminTeamsAdminsListRequest(@JsonProperty("team_id") String teamId, @JsonProperty("token") String token) {
        this.teamId = teamId;
        this.token = token;
  }
}
