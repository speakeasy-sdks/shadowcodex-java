/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package shadowcodex.slack_spec.models.operations;

import shadowcodex.slack_spec.utils.SpeakeasyMetadata;

public class OauthTokenRequest {
    /**
     * Issued when you created your application.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=client_id")
    public String clientId;
    public OauthTokenRequest withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * Issued when you created your application.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=client_secret")
    public String clientSecret;
    public OauthTokenRequest withClientSecret(String clientSecret) {
        this.clientSecret = clientSecret;
        return this;
    }
    
    /**
     * The `code` param returned via the OAuth callback.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=code")
    public String code;
    public OauthTokenRequest withCode(String code) {
        this.code = code;
        return this;
    }
    
    /**
     * This must match the originally submitted URI (if one was sent).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=redirect_uri")
    public String redirectUri;
    public OauthTokenRequest withRedirectUri(String redirectUri) {
        this.redirectUri = redirectUri;
        return this;
    }
    
    /**
     * Request the user to add your app only to a single channel.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=single_channel")
    public Boolean singleChannel;
    public OauthTokenRequest withSingleChannel(Boolean singleChannel) {
        this.singleChannel = singleChannel;
        return this;
    }
    
    public OauthTokenRequest(){}
}
