/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package shadowcodex.slack_spec.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import shadowcodex.slack_spec.utils.SpeakeasyMetadata;

public class AdminConversationsRestrictAccessListGroupsRequest {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=channel_id")
    public String channelId;
    public AdminConversationsRestrictAccessListGroupsRequest withChannelId(String channelId) {
        this.channelId = channelId;
        return this;
    }
    
    /**
     * The workspace where the channel exists. This argument is required for channels only tied to one workspace, and optional for channels that are shared across an organization.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=team_id")
    public String teamId;
    public AdminConversationsRestrictAccessListGroupsRequest withTeamId(String teamId) {
        this.teamId = teamId;
        return this;
    }
    
    /**
     * Authentication token. Requires scope: `admin.conversations:read`
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=token")
    public String token;
    public AdminConversationsRestrictAccessListGroupsRequest withToken(String token) {
        this.token = token;
        return this;
    }
    
    public AdminConversationsRestrictAccessListGroupsRequest(@JsonProperty("channel_id") String channelId, @JsonProperty("token") String token) {
        this.channelId = channelId;
        this.token = token;
  }
}
