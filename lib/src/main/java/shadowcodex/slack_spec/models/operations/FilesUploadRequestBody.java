/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package shadowcodex.slack_spec.models.operations;

import shadowcodex.slack_spec.utils.SpeakeasyMetadata;

public class FilesUploadRequestBody {
    /**
     * Comma-separated list of channel names or IDs where the file will be shared.
     */
    @SpeakeasyMetadata("form:name=channels")
    public String channels;
    public FilesUploadRequestBody withChannels(String channels) {
        this.channels = channels;
        return this;
    }
    
    /**
     * File contents via a POST variable. If omitting this parameter, you must provide a `file`.
     */
    @SpeakeasyMetadata("form:name=content")
    public String content;
    public FilesUploadRequestBody withContent(String content) {
        this.content = content;
        return this;
    }
    
    /**
     * File contents via `multipart/form-data`. If omitting this parameter, you must submit `content`.
     */
    @SpeakeasyMetadata("form:name=file")
    public String file;
    public FilesUploadRequestBody withFile(String file) {
        this.file = file;
        return this;
    }
    
    /**
     * Filename of file.
     */
    @SpeakeasyMetadata("form:name=filename")
    public String filename;
    public FilesUploadRequestBody withFilename(String filename) {
        this.filename = filename;
        return this;
    }
    
    /**
     * A [file type](/types/file#file_types) identifier.
     */
    @SpeakeasyMetadata("form:name=filetype")
    public String filetype;
    public FilesUploadRequestBody withFiletype(String filetype) {
        this.filetype = filetype;
        return this;
    }
    
    /**
     * The message text introducing the file in specified `channels`.
     */
    @SpeakeasyMetadata("form:name=initial_comment")
    public String initialComment;
    public FilesUploadRequestBody withInitialComment(String initialComment) {
        this.initialComment = initialComment;
        return this;
    }
    
    /**
     * Provide another message's `ts` value to upload this file as a reply. Never use a reply's `ts` value; use its parent instead.
     */
    @SpeakeasyMetadata("form:name=thread_ts")
    public Double threadTs;
    public FilesUploadRequestBody withThreadTs(Double threadTs) {
        this.threadTs = threadTs;
        return this;
    }
    
    /**
     * Title of file.
     */
    @SpeakeasyMetadata("form:name=title")
    public String title;
    public FilesUploadRequestBody withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * Authentication token. Requires scope: `files:write:user`
     */
    @SpeakeasyMetadata("form:name=token")
    public String token;
    public FilesUploadRequestBody withToken(String token) {
        this.token = token;
        return this;
    }
    
    public FilesUploadRequestBody(){}
}
