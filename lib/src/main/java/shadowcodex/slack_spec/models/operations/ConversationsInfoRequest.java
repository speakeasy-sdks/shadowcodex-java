/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package shadowcodex.slack_spec.models.operations;

import shadowcodex.slack_spec.utils.SpeakeasyMetadata;

public class ConversationsInfoRequest {
    /**
     * Conversation ID to learn more about
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=channel")
    public String channel;

    public ConversationsInfoRequest withChannel(String channel) {
        this.channel = channel;
        return this;
    }
    
    /**
     * Set this to `true` to receive the locale for this conversation. Defaults to `false`
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=include_locale")
    public Boolean includeLocale;

    public ConversationsInfoRequest withIncludeLocale(Boolean includeLocale) {
        this.includeLocale = includeLocale;
        return this;
    }
    
    /**
     * Set to `true` to include the member count for the specified conversation. Defaults to `false`
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=include_num_members")
    public Boolean includeNumMembers;

    public ConversationsInfoRequest withIncludeNumMembers(Boolean includeNumMembers) {
        this.includeNumMembers = includeNumMembers;
        return this;
    }
    
    /**
     * Authentication token. Requires scope: `conversations:read`
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=token")
    public String token;

    public ConversationsInfoRequest withToken(String token) {
        this.token = token;
        return this;
    }
    
    public ConversationsInfoRequest(){}
}
