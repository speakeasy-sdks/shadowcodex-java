/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package shadowcodex.slack_spec.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import shadowcodex.slack_spec.utils.SpeakeasyMetadata;

public class AdminUsergroupsListChannelsRequest {
    /**
     * Flag to include or exclude the count of members per channel.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=include_num_members")
    public Boolean includeNumMembers;
    public AdminUsergroupsListChannelsRequest withIncludeNumMembers(Boolean includeNumMembers) {
        this.includeNumMembers = includeNumMembers;
        return this;
    }
    
    /**
     * ID of the the workspace.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=team_id")
    public String teamId;
    public AdminUsergroupsListChannelsRequest withTeamId(String teamId) {
        this.teamId = teamId;
        return this;
    }
    
    /**
     * Authentication token. Requires scope: `admin.usergroups:read`
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=token")
    public String token;
    public AdminUsergroupsListChannelsRequest withToken(String token) {
        this.token = token;
        return this;
    }
    
    /**
     * ID of the IDP group to list default channels for.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=usergroup_id")
    public String usergroupId;
    public AdminUsergroupsListChannelsRequest withUsergroupId(String usergroupId) {
        this.usergroupId = usergroupId;
        return this;
    }
    
    public AdminUsergroupsListChannelsRequest(@JsonProperty("token") String token, @JsonProperty("usergroup_id") String usergroupId) {
        this.token = token;
        this.usergroupId = usergroupId;
  }
}
