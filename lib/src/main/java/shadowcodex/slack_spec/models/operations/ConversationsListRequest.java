/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package shadowcodex.slack_spec.models.operations;

import shadowcodex.slack_spec.utils.SpeakeasyMetadata;

public class ConversationsListRequest {
    /**
     * Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first "page" of the collection. See [pagination](/docs/pagination) for more detail.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=cursor")
    public String cursor;

    public ConversationsListRequest withCursor(String cursor) {
        this.cursor = cursor;
        return this;
    }
    
    /**
     * Set to `true` to exclude archived channels from the list
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=exclude_archived")
    public Boolean excludeArchived;

    public ConversationsListRequest withExcludeArchived(Boolean excludeArchived) {
        this.excludeArchived = excludeArchived;
        return this;
    }
    
    /**
     * The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached. Must be an integer no larger than 1000.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Long limit;

    public ConversationsListRequest withLimit(Long limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * Authentication token. Requires scope: `conversations:read`
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=token")
    public String token;

    public ConversationsListRequest withToken(String token) {
        this.token = token;
        return this;
    }
    
    /**
     * Mix and match channel types by providing a comma-separated list of any combination of `public_channel`, `private_channel`, `mpim`, `im`
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=types")
    public String types;

    public ConversationsListRequest withTypes(String types) {
        this.types = types;
        return this;
    }
    
    public ConversationsListRequest(){}
}
