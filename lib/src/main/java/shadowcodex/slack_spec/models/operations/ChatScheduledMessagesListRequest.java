/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package shadowcodex.slack_spec.models.operations;

import shadowcodex.slack_spec.utils.SpeakeasyMetadata;

public class ChatScheduledMessagesListRequest {
    /**
     * The channel of the scheduled messages
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=channel")
    public String channel;
    public ChatScheduledMessagesListRequest withChannel(String channel) {
        this.channel = channel;
        return this;
    }
    
    /**
     * For pagination purposes, this is the `cursor` value returned from a previous call to `chat.scheduledmessages.list` indicating where you want to start this call from.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=cursor")
    public String cursor;
    public ChatScheduledMessagesListRequest withCursor(String cursor) {
        this.cursor = cursor;
        return this;
    }
    
    /**
     * A UNIX timestamp of the latest value in the time range
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=latest")
    public Double latest;
    public ChatScheduledMessagesListRequest withLatest(Double latest) {
        this.latest = latest;
        return this;
    }
    
    /**
     * Maximum number of original entries to return.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Long limit;
    public ChatScheduledMessagesListRequest withLimit(Long limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * A UNIX timestamp of the oldest value in the time range
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=oldest")
    public Double oldest;
    public ChatScheduledMessagesListRequest withOldest(Double oldest) {
        this.oldest = oldest;
        return this;
    }
    
    /**
     * Authentication token. Requires scope: `none`
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=token")
    public String token;
    public ChatScheduledMessagesListRequest withToken(String token) {
        this.token = token;
        return this;
    }
    
    public ChatScheduledMessagesListRequest(){}
}
