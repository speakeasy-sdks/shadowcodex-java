/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package shadowcodex.slack_spec.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import shadowcodex.slack_spec.utils.SpeakeasyMetadata;

public class AdminConversationsRestrictAccessAddGroupRequestBody {
    /**
     * The channel to link this group to.
     */
    @SpeakeasyMetadata("form:name=channel_id")
    public String channelId;
    public AdminConversationsRestrictAccessAddGroupRequestBody withChannelId(String channelId) {
        this.channelId = channelId;
        return this;
    }
    
    /**
     * The [IDP Group](https://slack.com/help/articles/115001435788-Connect-identity-provider-groups-to-your-Enterprise-Grid-org) ID to be an allowlist for the private channel.
     */
    @SpeakeasyMetadata("form:name=group_id")
    public String groupId;
    public AdminConversationsRestrictAccessAddGroupRequestBody withGroupId(String groupId) {
        this.groupId = groupId;
        return this;
    }
    
    /**
     * The workspace where the channel exists. This argument is required for channels only tied to one workspace, and optional for channels that are shared across an organization.
     */
    @SpeakeasyMetadata("form:name=team_id")
    public String teamId;
    public AdminConversationsRestrictAccessAddGroupRequestBody withTeamId(String teamId) {
        this.teamId = teamId;
        return this;
    }
    
    /**
     * Authentication token. Requires scope: `admin.conversations:write`
     */
    @SpeakeasyMetadata("form:name=token")
    public String token;
    public AdminConversationsRestrictAccessAddGroupRequestBody withToken(String token) {
        this.token = token;
        return this;
    }
    
    public AdminConversationsRestrictAccessAddGroupRequestBody(@JsonProperty("channel_id") String channelId, @JsonProperty("group_id") String groupId, @JsonProperty("token") String token) {
        this.channelId = channelId;
        this.groupId = groupId;
        this.token = token;
  }
}
