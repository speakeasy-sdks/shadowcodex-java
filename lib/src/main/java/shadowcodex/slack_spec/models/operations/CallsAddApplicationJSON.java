/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package shadowcodex.slack_spec.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CallsAddApplicationJSON {
    /**
     * The valid Slack user ID of the user who created this Call. When this method is called with a user token, the `created_by` field is optional and defaults to the authed user of the token. Otherwise, the field is required.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_by")
    public String createdBy;

    public CallsAddApplicationJSON withCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }
    
    /**
     * Call start time in UTC UNIX timestamp format
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("date_start")
    public Integer dateStart;

    public CallsAddApplicationJSON withDateStart(Integer dateStart) {
        this.dateStart = dateStart;
        return this;
    }
    
    /**
     * When supplied, available Slack clients will attempt to directly launch the 3rd-party Call with this URL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desktop_app_join_url")
    public String desktopAppJoinUrl;

    public CallsAddApplicationJSON withDesktopAppJoinUrl(String desktopAppJoinUrl) {
        this.desktopAppJoinUrl = desktopAppJoinUrl;
        return this;
    }
    
    /**
     * An optional, human-readable ID supplied by the 3rd-party Call provider. If supplied, this ID will be displayed in the Call object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("external_display_id")
    public String externalDisplayId;

    public CallsAddApplicationJSON withExternalDisplayId(String externalDisplayId) {
        this.externalDisplayId = externalDisplayId;
        return this;
    }
    
    /**
     * An ID supplied by the 3rd-party Call provider. It must be unique across all Calls from that service.
     */
    @JsonProperty("external_unique_id")
    public String externalUniqueId;

    public CallsAddApplicationJSON withExternalUniqueId(String externalUniqueId) {
        this.externalUniqueId = externalUniqueId;
        return this;
    }
    
    /**
     * The URL required for a client to join the Call.
     */
    @JsonProperty("join_url")
    public String joinUrl;

    public CallsAddApplicationJSON withJoinUrl(String joinUrl) {
        this.joinUrl = joinUrl;
        return this;
    }
    
    /**
     * The name of the Call.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public CallsAddApplicationJSON withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * The list of users to register as participants in the Call. [Read more on how to specify users here](/apis/calls#users).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("users")
    public String users;

    public CallsAddApplicationJSON withUsers(String users) {
        this.users = users;
        return this;
    }
    
    public CallsAddApplicationJSON(@JsonProperty("external_unique_id") String externalUniqueId, @JsonProperty("join_url") String joinUrl) {
        this.externalUniqueId = externalUniqueId;
        this.joinUrl = joinUrl;
  }
}
