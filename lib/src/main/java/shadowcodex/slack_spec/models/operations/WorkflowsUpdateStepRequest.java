/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package shadowcodex.slack_spec.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import shadowcodex.slack_spec.utils.SpeakeasyMetadata;

public class WorkflowsUpdateStepRequest {
    /**
     * A JSON key-value map of inputs required from a user during configuration. This is the data your app expects to receive when the workflow step starts. **Please note**: the embedded variable format is set and replaced by the workflow system. You cannot create custom variables that will be replaced at runtime. [Read more about variables in workflow steps here](/workflows/steps#variables).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=inputs")
    public String inputs;
    public WorkflowsUpdateStepRequest withInputs(String inputs) {
        this.inputs = inputs;
        return this;
    }
    
    /**
     * An JSON array of output objects used during step execution. This is the data your app agrees to provide when your workflow step was executed.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=outputs")
    public String outputs;
    public WorkflowsUpdateStepRequest withOutputs(String outputs) {
        this.outputs = outputs;
        return this;
    }
    
    /**
     * An optional field that can be used to override app image that is shown in the Workflow Builder.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=step_image_url")
    public String stepImageUrl;
    public WorkflowsUpdateStepRequest withStepImageUrl(String stepImageUrl) {
        this.stepImageUrl = stepImageUrl;
        return this;
    }
    
    /**
     * An optional field that can be used to override the step name that is shown in the Workflow Builder.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=step_name")
    public String stepName;
    public WorkflowsUpdateStepRequest withStepName(String stepName) {
        this.stepName = stepName;
        return this;
    }
    
    /**
     * Authentication token. Requires scope: `workflow.steps:execute`
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=token")
    public String token;
    public WorkflowsUpdateStepRequest withToken(String token) {
        this.token = token;
        return this;
    }
    
    /**
     * A context identifier provided with `view_submission` payloads used to call back to `workflows.updateStep`.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=workflow_step_edit_id")
    public String workflowStepEditId;
    public WorkflowsUpdateStepRequest withWorkflowStepEditId(String workflowStepEditId) {
        this.workflowStepEditId = workflowStepEditId;
        return this;
    }
    
    public WorkflowsUpdateStepRequest(@JsonProperty("token") String token, @JsonProperty("workflow_step_edit_id") String workflowStepEditId) {
        this.token = token;
        this.workflowStepEditId = workflowStepEditId;
  }
}
