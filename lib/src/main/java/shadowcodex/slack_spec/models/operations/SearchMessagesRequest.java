/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package shadowcodex.slack_spec.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import shadowcodex.slack_spec.utils.SpeakeasyMetadata;

public class SearchMessagesRequest {
    /**
     * Pass the number of results you want per "page". Maximum of `100`.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=count")
    public Long count;
    public SearchMessagesRequest withCount(Long count) {
        this.count = count;
        return this;
    }
    
    /**
     * Pass a value of `true` to enable query highlight markers (see below).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=highlight")
    public Boolean highlight;
    public SearchMessagesRequest withHighlight(Boolean highlight) {
        this.highlight = highlight;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page")
    public Long page;
    public SearchMessagesRequest withPage(Long page) {
        this.page = page;
        return this;
    }
    
    /**
     * Search query.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=query")
    public String query;
    public SearchMessagesRequest withQuery(String query) {
        this.query = query;
        return this;
    }
    
    /**
     * Return matches sorted by either `score` or `timestamp`.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort")
    public String sort;
    public SearchMessagesRequest withSort(String sort) {
        this.sort = sort;
        return this;
    }
    
    /**
     * Change sort direction to ascending (`asc`) or descending (`desc`).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_dir")
    public String sortDir;
    public SearchMessagesRequest withSortDir(String sortDir) {
        this.sortDir = sortDir;
        return this;
    }
    
    /**
     * Authentication token. Requires scope: `search:read`
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=token")
    public String token;
    public SearchMessagesRequest withToken(String token) {
        this.token = token;
        return this;
    }
    
    public SearchMessagesRequest(@JsonProperty("query") String query, @JsonProperty("token") String token) {
        this.query = query;
        this.token = token;
  }
}
