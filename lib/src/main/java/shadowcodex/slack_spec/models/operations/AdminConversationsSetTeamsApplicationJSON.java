/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package shadowcodex.slack_spec.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class AdminConversationsSetTeamsApplicationJSON {
    /**
     * The encoded `channel_id` to add or remove to workspaces.
     */
    @JsonProperty("channel_id")
    public String channelId;
    public AdminConversationsSetTeamsApplicationJSON withChannelId(String channelId) {
        this.channelId = channelId;
        return this;
    }
    
    /**
     * True if channel has to be converted to an org channel
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("org_channel")
    public Boolean orgChannel;
    public AdminConversationsSetTeamsApplicationJSON withOrgChannel(Boolean orgChannel) {
        this.orgChannel = orgChannel;
        return this;
    }
    
    /**
     * A comma-separated list of workspaces to which the channel should be shared. Not required if the channel is being shared org-wide.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("target_team_ids")
    public String targetTeamIds;
    public AdminConversationsSetTeamsApplicationJSON withTargetTeamIds(String targetTeamIds) {
        this.targetTeamIds = targetTeamIds;
        return this;
    }
    
    /**
     * The workspace to which the channel belongs. Omit this argument if the channel is a cross-workspace shared channel.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("team_id")
    public String teamId;
    public AdminConversationsSetTeamsApplicationJSON withTeamId(String teamId) {
        this.teamId = teamId;
        return this;
    }
    
    public AdminConversationsSetTeamsApplicationJSON(@JsonProperty("channel_id") String channelId) {
        this.channelId = channelId;
  }
}
